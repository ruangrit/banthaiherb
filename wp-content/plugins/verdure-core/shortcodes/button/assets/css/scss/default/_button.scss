/* ==========================================================================
   Button shortcode style - begin
   ========================================================================== */

.mkdf-btn {
    @include mkdfButtonDefaultStyle();
    @include mkdfButtonMediumParams();
    cursor: pointer;

    .mkdf-btn-text{
        position: relative;
        z-index: 5;
    }
    
    &.mkdf-btn-simple {
        padding: 0 !important;
        font-size: 14px;
        letter-spacing: 0.04em;
        color: $default-heading-color;
        background-color: transparent;
        border: 0;
        vertical-align: middle;
        box-sizing: border-box;

        .mkdf-btn-text {
            display: inline-block;
            vertical-align: middle;
        }

        &.mkdf-btn-underline{
        	&:after{
        		content: '';
        		position: absolute;
        		bottom: 0;
        		left: 0;
        		width: 100%;
        		height: 1px;
        		background-color: currentColor;
                transform: rotateY(0);
        		@include mkdfTransition(transform .9s $default-easing-function);
        	}

        	&:hover:after{
        		transform: rotateY(180deg);
        	}
        }

        &:not(.mkdf-btn-custom-hover-color):not(.mkdf-btn-underline):hover {
            //important because of inline color attribute. :not is used so we don't have to use important in JS
            color: $first-main-color !important;
        }

        &:not(.mkdf-btn-custom-hover-bg):hover {
            //important because of inline color attribute. :not is used so we don't have to use important in JS
            background-color: transparent !important;
        }
    }

    &.mkdf-btn-solid {
        @include mkdfButtonSolidColor();

        &.mkdf-btn-overlay {
            overflow: hidden;
            &:after {
                content: '';
                @include mkdfAbsoluteHolderLayout();
                background-color: rgba(0, 0, 0, 0.2);
                @include mkdfTransform(translateX(-120%));
                @include mkdfTransitionTransform(.9s ease);
            }

            &:hover:after{
                @include mkdfTransform(translateX(120%));
            }
        }

        &:not(.mkdf-btn-overlay):not(.mkdf-btn-custom-hover-color):hover {
            //important because of inline color attribute. :not is used so we don't have to use important in JS
            color: #fff !important;
        }

        &:not(.mkdf-btn-overlay):not(.mkdf-btn-custom-hover-bg):hover {
            //important because of inline color attribute. :not is used so we don't have to use important in JS
            background-color: $default-heading-color !important;
        }

        &:not(.mkdf-btn-overlay):not(.mkdf-btn-custom-border-hover):hover {
            //important because of inline color attribute. :not is used so we don't have to use important in JS
            border-color: $default-heading-color !important;
        }
    }

    &.mkdf-btn-outline {
	    @include mkdfButtonOutlineColor();

        &.mkdf-btn-overlay {
            overflow: hidden;
            &:after {
                content: '';
                @include mkdfAbsoluteHolderLayout();
                background-color: $first-main-color;
                @include mkdfTransform(translateX(-120%));
                @include mkdfTransitionTransform(.9s ease);
            }

            &:hover:after{
                @include mkdfTransform(translateX(120%));
            }
        }

        &:not(.mkdf-btn-overlay):not(.mkdf-btn-custom-hover-color):hover {
            //important because of inline color attribute. :not is used so we don't have to use important in JS
            color: #fff !important;
        }

        &:not(.mkdf-btn-overlay):not(.mkdf-btn-custom-hover-bg):hover {
            //important because of inline color attribute. :not is used so we don't have to use important in JS
            background-color: $first-main-color !important;
        }

        &:not(.mkdf-btn-overlay):not(.mkdf-btn-custom-border-hover):hover {
            //important because of inline color attribute. :not is used so we don't have to use important in JS
            border-color: $first-main-color !important;
        }
    }

    &.mkdf-btn-small {
        @include mkdfButtonSmallParams();
    }

    &.mkdf-btn-medium {
        //same as default
    }

    &.mkdf-btn-large {
        @include mkdfButtonLargeParams();
    }

    &.mkdf-btn-huge {
        @include mkdfButtonHugeParams();
    }

    &.mkdf-btn-icon {

        > i,
        > span:not(.mkdf-btn-text) {
            position: relative;
            display: inline-block;
            vertical-align: top;
            margin: 0 0 0 4px;
            font-size: 1.142857142857143em;
            line-height: inherit;
            @include mkdfTransitionTransform($default-transition-duration $default-easing-function);

            &:before {
                display: block;
                line-height: inherit;
            }
        }


        &.mkdf-btn-icon-animate:hover{
        	> i,
        	> span:not(.mkdf-btn-text) {
        		@include mkdfTransform(translateX(3px));
        	}
        }
    }
}
/* ==========================================================================
   Button shortcode style - end
   ========================================================================== */